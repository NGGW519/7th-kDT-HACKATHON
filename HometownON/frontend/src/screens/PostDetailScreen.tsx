import React, { useState } from 'react';import { View, Text, StyleSheet, ScrollView, TouchableOpacity, TextInput, FlatList } from 'react-native';import { RouteProp } from '@react-navigation/native';import { StackNavigationProp } from '@react-navigation/stack';type RootStackParamList = {Board: undefined;PostList: { category: string };PostDetail: { postId: string };PostWrite: { category: string };};type PostDetailScreenRouteProp = RouteProp<RootStackParamList, 'PostDetail'>;type PostDetailScreenNavigationProp = StackNavigationProp<RootStackParamList, 'PostDetail'>;interface PostDetailScreenProps {route: PostDetailScreenRouteProp;navigation: PostDetailScreenNavigationProp;}interface Comment {id: string;author: string;date: string;content: string;likes: number;parentId?: string;}const PostDetailScreen: React.FC<PostDetailScreenProps> = ({ route, navigation }) => {const { postId } = route.params;const post = {id: postId,title: `게시글 ${postId}의 제목입니다.`,author: '익명 작성자',date: '2024-07-15',views: 123,likes: 45,content: `이것은 게시글 ${postId}의 본문 내용입니다. 

게시글의 상세한 내용을 여기에 작성합니다. 

여러 줄의 텍스트와 추가 정보가 포함될 수 있습니다.`,};const [comments, setComments] = useState<Comment[]>([{ id: 'c1', author: '댓글러1', date: '2024-07-15', content: '첫 번째 댓글입니다.', likes: 3 },{ id: 'c2', author: '익명 댓글러', date: '2024-07-15', content: '두 번째 댓글입니다.', likes: 1 },{ id: 'c3', author: '댓글러2', date: '2024-07-15', content: '세 번째 댓글입니다.', likes: 0, parentId: 'c1' },]);const [newComment, setNewComment] = useState('');const handleAddComment = () => {if (newComment.trim() === '') return;const newId = `c${comments.length + 1}`;const comment: Comment = {id: newId,author: '새로운 댓글러',date: new Date().toISOString().split('T')[0],content: newComment,likes: 0,};setComments([...comments, comment]);setNewComment('');};const renderCommentItem = ({ item }: { item: Comment }) => (<View style={[styles.commentItem, item.parentId && styles.replyCommentItem]}><Text style={styles.commentAuthor}>{item.author}</Text><Text style={styles.commentDate}>{item.date}</Text><Text style={styles.commentContent}>{item.content}</Text><Text style={styles.commentLikes}>좋아요: {item.likes}</Text></View>);return (<View style={styles.container}><ScrollView contentContainerStyle={styles.scrollViewContent}><Text style={styles.postTitle}>{post.title}</Text><View style={styles.postMeta}><Text style={styles.postAuthor}>{post.author}</Text><Text style={styles.postDate}>{post.date}</Text><Text>조회수: {post.views}</Text><Text>좋아요: {post.likes}</Text></View><Text style={styles.postContent}>{post.content}</Text><View style={styles.commentsSection}><Text style={styles.commentsHeader}>댓글</Text><FlatListdata={comments.filter(comment => !comment.parentId)}renderItem={renderCommentItem}keyExtractor={(item) => item.id}scrollEnabled={false}/><View>{comments.filter(comment => !comment.parentId).map(topLevelComment => (<View key={topLevelComment.id}>{comments.filter(comment => comment.parentId === topLevelComment.id).map(reply => renderCommentItem({ item: reply }))}</View>))}</View><View style={styles.commentInputContainer}><TextInputstyle={styles.commentInput}placeholder="댓글을 입력하세요..."value={newComment}onChangeText={setNewComment}multiline/><TouchableOpacity style={styles.commentSubmitButton} onPress={handleAddComment}><Text style={styles.commentSubmitButtonText}>등록</Text></TouchableOpacity></View></View></ScrollView></View>);};const styles = StyleSheet.create({container: {flex: 1,backgroundColor: '#f0f0f0',paddingTop: 20,},scrollViewContent: {padding: 15,},postTitle: {fontSize: 24,fontWeight: 'bold',marginBottom: 10,color: '#333',},postMeta: {flexDirection: 'row',justifyContent: 'space-between',marginBottom: 15,borderBottomWidth: 1,borderBottomColor: '#eee',paddingBottom: 10,},postAuthor: {fontSize: 14,color: '#666',},postDate: {fontSize: 14,color: '#666',},postContent: {fontSize: 16,lineHeight: 24,color: '#333',marginBottom: 20,},commentsSection: {marginTop: 20,borderTopWidth: 1,borderTopColor: '#eee',paddingTop: 15,},commentsHeader: {fontSize: 20,fontWeight: 'bold',marginBottom: 10,color: '#333',},commentItem: {backgroundColor: '#fff',padding: 10,borderRadius: 8,marginBottom: 10,shadowColor: '#000',shadowOffset: { width: 0, height: 1 },shadowOpacity: 0.05,shadowRadius: 2,elevation: 1,},replyCommentItem: {marginLeft: 20,backgroundColor: '#f9f9f9',},commentAuthor: {fontSize: 14,fontWeight: 'bold',color: '#555',},commentDate: {fontSize: 12,color: '#999',marginBottom: 5,},commentContent: {fontSize: 15,color: '#333',marginBottom: 5,},commentLikes: {fontSize: 12,color: '#777',textAlign: 'right',},commentInputContainer: {flexDirection: 'row',marginTop: 20,borderTopWidth: 1,borderTopColor: '#eee',paddingTop: 10,},commentInput: {flex: 1,borderWidth: 1,borderColor: '#ddd',borderRadius: 5,padding: 10,marginRight: 10,minHeight: 40,maxHeight: 100,},commentSubmitButton: {backgroundColor: '#007bff',padding: 10,borderRadius: 5,justifyContent: 'center',alignItems: 'center',},commentSubmitButtonText: {color: '#fff',fontWeight: 'bold',},});export default PostDetailScreen;